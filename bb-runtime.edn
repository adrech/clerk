{:min-bb-version "1.0.164"
 :paths ["src" "notebooks" "resources"]
 :deps {hiccup/hiccup {:mvn/version "2.0.0-alpha2"}
        org.babashka/cli {:mvn/version "0.5.40"}
        io.github.nextjournal/markdown {:mvn/version "0.4.126"}
        io.github.nextjournal/clerk-slideshow {:git/sha "562f634494a1e1a9149ed78d5d39fd9486cc00ba"}}
 :tasks
 {:init
  (let [md-mod (slurp (clojure.java.io/resource "js/markdown.mjs"))]
    ;; FIXME: hack for having qjs relative module imports work
    (when-not (babashka.fs/exists? "js/markdown.mjs")
      (println "Copying nextjournal.markdown ES module:" (count md-mod))
      (babashka.fs/create-dir "js")
      (spit (clojure.java.io/file "js/markdown.mjs") (slurp (clojure.java.io/resource "js/markdown.mjs")))))

  dev
  {:requires ([babashka.fs :as fs]
              [babashka.nrepl.server :as srv]
              [babashka.cli :as cli])
   :task (do (srv/start-server! {:host "localhost" :port 1339})
             (spit ".nrepl-port" "1339")
             ;; can't require clerk before copying md module
             ((requiring-resolve 'nextjournal.clerk/serve!) (cli/parse-opts *command-line-args*))
             (-> (Runtime/getRuntime)
               (.addShutdownHook (Thread. (fn []
                                            ((requiring-resolve 'nextjournal.clerk/halt!))
                                            (fs/delete ".nrepl-port")))))
             (deref (promise)))}

  build
  {:requires ([nextjournal.clerk :as clerk]
              [babashka.cli :as cli])
   :task (let [spec (-> (resolve 'nextjournal.clerk/build!) meta :org.babashka/cli)]
           (clerk/build! (cli/parse-opts *command-line-args* spec)))}}}
